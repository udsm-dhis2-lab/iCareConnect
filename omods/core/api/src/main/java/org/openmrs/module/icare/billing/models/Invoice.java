package org.openmrs.module.icare.billing.models;

// Generated Oct 7, 2020 12:48:40 PM by Hibernate Tools 5.2.10.Final

import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonProperty;
import org.openmrs.BaseChangeableOpenmrsData;
import org.openmrs.Concept;
import org.openmrs.Patient;
import org.openmrs.Visit;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.*;
import java.util.*;

//import com.google.gson.annotations.Expose;
//import com.google.gson.annotations.SerializedName;

/**
 * BlInvoice generated by hbm2java
 */
@Entity
@Transactional
@Table(name = "bl_invoice")
public class Invoice extends BaseChangeableOpenmrsData implements java.io.Serializable {
	
	@Id
	@GeneratedValue()
	@Column(name = "invoice_id", unique = true, nullable = false)
	private int id;
	
	@ManyToOne
	@JoinColumn(name = "visit_id", nullable = false)
	@JsonIgnore
	private Visit visit;
	
	@ManyToOne
	@JoinColumn(name = "payment_mode_id")
	private Concept paymentMode;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "id.invoice", cascade = { CascadeType.PERSIST })
	@JsonIgnore
	private List<InvoiceItem> invoiceItems = new ArrayList<InvoiceItem>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invoice")
	private List<Payment> payments = new ArrayList<Payment>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "id.invoice")
	private List<DiscountInvoiceItem> discountItems = new ArrayList<DiscountInvoiceItem>(0);
	
	public List<InvoiceItem> getInvoiceItems() {
		return this.invoiceItems;
	}
	
	public Invoice() {
		
	}
	
	public Invoice(@JsonProperty String invoice) {
		this.setUuid(invoice);
	}
	
	public void setInvoiceItems(List<InvoiceItem> invoiceItems) {
		this.invoiceItems = invoiceItems;
	}
	
	public void addItem(InvoiceItem invoiceItem) {
		this.invoiceItems.add(invoiceItem);
	}
	
	public Integer getId() {
		return id;
	}
	
	public void setId(Integer id) {
		this.id = id;
	}
	
	public List<Payment> getPayments() {
		return payments;
	}
	
	public void setPayments(List<Payment> payments) {
		this.payments = payments;
	}
	
	public Map<String, Object> toMap() {
		HashMap<String, Object> invoiceMap = new HashMap<String, Object>();
		
		invoiceMap.put("uuid", this.getUuid());
		String invoiceNumber = "0000000000";
		invoiceNumber = invoiceNumber.substring(String.valueOf(this.getId()).length());
		invoiceMap.put("invoiceNumber", invoiceNumber);
		
		HashMap<String, Object> patient = new HashMap<String, Object>();
		patient.put("uuid", this.getVisit().getPatient().getUuid());
		patient.put("name", this.getVisit().getPatient().getPersonName().getFullName());
		invoiceMap.put("patient", patient);
		
		HashMap<String, Object> visit = new HashMap<String, Object>();
		visit.put("uuid", this.getVisit().getUuid());
		invoiceMap.put("visit", visit);
		
		Map<String, Object> paymentModeObject = new HashMap<String, Object>();
		paymentModeObject.put("uuid", this.getPaymentMode().getUuid());
		paymentModeObject.put("display", this.getPaymentMode().getDisplayString());
		invoiceMap.put("paymentMode", paymentModeObject);
		
		List<Map<String, Object>> invoiceItems = new ArrayList<Map<String, Object>>();
		for (InvoiceItem invoiceItem : this.getInvoiceItems()) {
			invoiceItems.add(invoiceItem.getMap());
		}
		invoiceMap.put("items", invoiceItems);
		
		Map<String, Object> creatorObject = new HashMap<String, Object>();
		
		if (this.getCreator() != null) {
			creatorObject.put("uuid", this.getCreator().getUuid());
			creatorObject.put("display", this.getCreator().getDisplayString());
		}
		
		invoiceMap.put("creator", creatorObject);
		
		invoiceMap.put("created", this.getDateCreated());
		
		invoiceMap.put("voided", this.getVoided());
		
		List<Map<String, Object>> paymentItems = new ArrayList<Map<String, Object>>();
		for (Payment payment : this.getPayments()) {
			paymentItems.add(payment.toMap());
		}
		invoiceMap.put("payments", paymentItems);
		
		List<Map<String, Object>> discountItems = new ArrayList<Map<String, Object>>();
		for (DiscountInvoiceItem discountInvoiceItem : this.getDiscountItems()) {
			discountItems.add(discountInvoiceItem.getMap());
		}
		invoiceMap.put("discountItems", discountItems);
		return invoiceMap;
	}
	
	public Concept getPaymentMode() {
		return paymentMode;
	}
	
	public void setPaymentMode(Concept paymentMode) {
		this.paymentMode = paymentMode;
	}
	
	public List<DiscountInvoiceItem> getDiscountItems() {
		return this.discountItems;
	}
	
	public void setDiscountItems(List<DiscountInvoiceItem> discountItems) {
		this.discountItems = discountItems;
	}
	
	public Visit getVisit() {
		return visit;
	}
	
	public void setVisit(Visit visit) {
		this.visit = visit;
	}
	
	public String toString() {
		return "Invoice[" + this.getUuid() + "]";
	}
	
	@Override
	public int hashCode() {
		return Objects.hash(this.toString());
	}
}
