package org.openmrs.module.icare.laboratory.models;

// Generated Oct 7, 2020 12:48:40 PM by Hibernate Tools 5.2.10.Final

import org.openmrs.User;
import org.openmrs.module.icare.billing.models.Discount;

import javax.persistence.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * LbSampleStatus generated by hbm2java
 */
@Entity
@Table(name = "lb_sample_status")
public class SampleStatus { // implements java.io.Serializable {

	@Id
	@GeneratedValue()
	@Column(name = "sample_status_id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sample_id")
	private Sample sample;
	
	@ManyToOne
	@JoinColumn(name = "user_id")
	private User user;
	
	@Column(name = "remarks", length = 65535)
	private String remarks;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "timestamp", length = 19)
	//@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-ddTHH:mm:ss.SSSZ")
	private Date timestamp;
	
	@Column(name = "status", length = 256)
	private String status;
	
	@Column(name = "category", length = 64)
	private String category;
	
	@Column(name = "retired")
	private Boolean retired;
	
	public String getRemarks() {
		return this.remarks;
	}
	
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	public String getStatus() {
		return this.status;
	}
	
	public void setStatus(String status) {
		this.status = status;
	}
	
	public Sample getSample() {
		return sample;
	}
	
	public void setSample(Sample sample) {
		this.sample = sample;
	}
	
	public void setId(Integer id) {
		this.id = id;
	}
	
	public User getUser() {
		return user;
	}
	
	public void setUser(User user) {
		this.user = user;
	}
	
	public Date getTimestamp() {
		return timestamp;
	}
	
	public void setTimestamp(Date timestamp) {
		this.timestamp = timestamp;
	}
	
	public Integer getId() {
		return id;
	}
	
	public String getCategory() {
		return category;
	}
	
	public void setCategory(String category) {
		this.category = category;
	}
	
	public void setRetired(boolean retired) {
		this.retired = retired;
	}
	
	public Boolean getRetired() {
		return retired;
	}
	
	public static SampleStatus fromMap(Map<String, Object> map) throws ParseException {
		SampleStatus sampleStatus = new SampleStatus();
		
		Sample sample = new Sample();
		sample.setUuid(((Map) map.get("sample")).get("uuid").toString());
		sampleStatus.setSample(sample);
		
		User user = new User();
		user.setUuid(((Map) map.get("user")).get("uuid").toString());
		sampleStatus.setUser(user);
		
		sampleStatus.setStatus((map.get("status")).toString());
		sampleStatus.setRemarks((map.get("remarks")).toString());
		if (map.get("category") != null) {
			sampleStatus.setCategory((map.get("category")).toString());
		}
		if (map.get("retired") != null) {
			sampleStatus.setRetired((Boolean) map.get("retired"));
		}
		if (map.get("timestamp") == null) {
			
			sampleStatus.setTimestamp(new Date());
			
		} else {
			
			String dateString = map.get("timestamp").toString();
			
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.SSS");
			Date parsedDate = dateFormat.parse(dateString);
			sampleStatus.setTimestamp(parsedDate);
			
		}
		
		return sampleStatus;
		
	}
	
	public Map<String, Object> toMap() {
		Map<String, Object> statusObject = new HashMap<String, Object>();
		
		statusObject.put("status", this.getStatus());
		statusObject.put("timestamp", this.getTimestamp());
		statusObject.put("remarks", this.getRemarks());
		if (this.getCategory() != null) {
			statusObject.put("category", this.getCategory());
		}
		if (this.retired != null) {
			statusObject.put("retired", this.getRetired());
		}
		HashMap<String, Object> userObject = new HashMap<String, Object>();
		if (this.getUser() != null) {
			userObject.put("uuid", this.getUser().getUuid());
			userObject.put("name", this.getUser().getDisplayString());
			statusObject.put("user", userObject);
			
		}
		
		return statusObject;
	}
}
